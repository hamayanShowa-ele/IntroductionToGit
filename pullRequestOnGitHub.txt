変更、追加を終えたらプルリクエスト

forkGitHubRepository.txtで他人のリポジトリをフォークしてクローンして作業を行い、
バグフィックスとか機能追加とかが完了したなら、元の他人のリポジトリにその改変を
マージしてもらう作業がプルリクエストとなる。

この時重要なのが取り込んでもらう過程の中に、コードレビューが入る事である。
いきなりマージされる前にコードレビューが行われることで、ソフトウエアの品質を保つ
事ができる、、、多分。

(1) 新たにプルリクエストを行うためのブランチを作る。(branchRepository.txtを参照)
ここではaddFunctionという名前にした。

(2) addFunctionが現行のブランチとなっているので、プロジェクトフォルダーの中にFunction1.txt
というファイルを作り、中身に「機能１」と書いて保存、コミットを行う。

(3) GitHubにプッシュする。この時、addFunctionブランチのみプッシュできる。

(4) GitHubのリモートリポジトリ上にaddFunctionが追加されている。更新されていなけ
ればブラウザのリロードを行う。

(5) ブラウザ画面の上の方の、なんとかcommits、何とかbranches、何とかpackeges、、、
と並んでいる行の何とかbranchesをクリックする。

(6) 「Your branche」のフォームの中に「addFunction」が記述されており、その右端に
「New pull request」のボタンが有るので、クリックする。

(7) 「Open a pull requst」と大きめの文字で書かれた行の下の下、左端に変なマークの
ある行に、矢印を挟んで左側が送り先、右側が送信元となっている。

(8) 「Write」、「Preview」とコメント等を書く欄が有るので、そこに適宜記入して、
「Create pull request」と言う緑のボタンをクリックする。


上記の作業で相手にプルリクエストが送られたので、マージされる事を待つ。

マージされたら、GitHubのリポジトリの「Pull requests」のタブで相手からマージされた
連絡が届く。
マージされた事でこの要求は閉じられるため、ブラウザを更新すると「Pull requests」
タブの数字は0に戻る。※その前が1であった場合。
「Pull requests」のタブを開けば「0 Open 1 Closed」となっている。
「Closed」をクリックすれば、承認された項目が表示される。
